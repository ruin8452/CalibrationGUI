<Page x:Class="CalibrationNewGUI.UI.MonitorPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:fa="clr-namespace:FontAwesome.WPF;assembly=FontAwesome.WPF"
      xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
      xmlns:mvvm="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
      xmlns:conv="clr-namespace:CalibrationNewGUI.UI.Converter"
      xmlns:glob="clr-namespace:CalibrationNewGUI.Globalization"
      xmlns:local="clr-namespace:CalibrationNewGUI.UI"
      mc:Ignorable="d"
      DataContext="{Binding Source={StaticResource Locator}, Path=MonitorPageVM}"
      Title="MonitorPage">

    <Page.Resources>
        <conv:InvertBool x:Key="InvertBoolConv"/>

        <Style x:Key="Hidden" TargetType="Border">
            <Style.Triggers>
                <DataTrigger Binding="{Binding AutoInfos.AutoSaveFlag}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding AutoInfos.AutoSaveFlag}" Value="False">
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MonitoringItemText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontFamily" Value="NanumGothic"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="MonitoringText" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Digital-7 Mono"/>
            <Setter Property="FontSize" Value="45"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
        </Style>
        <Style x:Key="DmmTextSwitch" TargetType="TextBlock" BasedOn="{StaticResource MonitoringText}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding CalMode}" Value="True">
                    <Setter Property="Text" Value="{Binding Dmm.Volt, StringFormat=#0.0}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding CalMode}" Value="False">
                    <Setter Property="Text" Value="{Binding Dmm.Curr, StringFormat=#0.0}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ImgBtn" TargetType="Button" BasedOn="{StaticResource BtnBaseNormal}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Margin" Value="0,0,5,0"/>
        </Style>
        <Style x:Key="FileBtn" TargetType="Button" BasedOn="{StaticResource BtnBaseNormal}">
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="#FF53609B"/>
            <Style.Triggers>
                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                    <BeginStoryboard Storyboard="{StaticResource BtnBackAni_NevyToLightNevy2}" />
                </EventTrigger>
                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                    <BeginStoryboard Storyboard="{StaticResource BtnBackAni_LightNevyToNevy2}" />
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="FileTextBaseStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="NanumGothic Light"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Background" Value="{x:Null}"/>
        </Style>

        <Style x:Key="DataGridBaseStyle" TargetType="DataGrid">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Height" Value="200"/>
            <Setter Property="Margin" Value="5,0"/>
            <Setter Property="CanUserSortColumns" Value="False"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="HorizontalGridLinesBrush" Value="LightGray"/>
            <Setter Property="VerticalGridLinesBrush" Value="LightGray"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        </Style>

        <Style x:Key="RunBaseStyle" TargetType="Run">
            <Setter Property="FontFamily" Value="NanumGothic"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
        </Style>
        <Style x:Key="CalTypeText" TargetType="Run" BasedOn="{StaticResource RunBaseStyle}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=VoltCalBtn, Path=IsChecked}" Value="True">
                    <Setter Property="Text" Value="mV"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=CurrCalBtn, Path=IsChecked}" Value="True">
                    <Setter Property="Text" Value="mA"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CalErrRateStyle" TargetType="Run" BasedOn="{StaticResource RunBaseStyle}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=VoltCalBtn, Path=IsChecked}" Value="True">
                    <Setter Property="Text" Value="{Binding CalMeaInfo.CalErrRangeVolt}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=CurrCalBtn, Path=IsChecked}" Value="True">
                    <Setter Property="Text" Value="{Binding CalMeaInfo.CalErrRangeCurr}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="MeaErrRateStyle" TargetType="Run" BasedOn="{StaticResource RunBaseStyle}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=VoltCalBtn, Path=IsChecked}" Value="True">
                    <Setter Property="Text" Value="{Binding CalMeaInfo.MeaErrRangeVolt}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=CurrCalBtn, Path=IsChecked}" Value="True">
                    <Setter Property="Text" Value="{Binding CalMeaInfo.MeaErrRangeCurr}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="RadioStyle" TargetType="RadioButton" BasedOn="{StaticResource RadioBaseToggle}">
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Background" Value="DodgerBlue"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>

                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                    <BeginStoryboard Storyboard="{StaticResource BorderColorAni_TransToBlue}" />
                </EventTrigger>
                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                    <BeginStoryboard Storyboard="{StaticResource BorderColorAni_BlueToTrans}" />
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <!-- 시작 컨트롤러 색상 변경 -->
        <Style TargetType="{x:Type fa:ImageAwesome}" x:Key="ColorChangeBlue">
            <Style.Triggers>
                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                    <BeginStoryboard Storyboard="{StaticResource ImgAsForAni_BlueToDarkBlue}"/>
                </EventTrigger>
                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                    <BeginStoryboard Storyboard="{StaticResource ImgAsForAni_DarkBlueToBlue}"/>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <!-- 시작 컨트롤러 색상 변경 -->
        <Style TargetType="{x:Type fa:ImageAwesome}" x:Key="ColorChangeWhite">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Width" Value="20"/>
            <Style.Triggers>
                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                    <BeginStoryboard Storyboard="{StaticResource ImgAsForAni_WhiteToBlue}"/>
                </EventTrigger>
                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                    <BeginStoryboard Storyboard="{StaticResource ImgAsForAni_BlueToWhite}"/>
                </EventTrigger>
            </Style.Triggers>
        </Style>
    </Page.Resources>

    <Grid Background="{StaticResource PageBackground}">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" MinHeight="321"/>
            <RowDefinition Height="230"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Margin="0,15,0,5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!--CAL 부분 Display-->
            <StackPanel Grid.Column="0">
                <TextBlock Text="CAL" Foreground="White" FontSize="35" HorizontalAlignment="Center" FontFamily="NanumGothic" FontWeight="Bold"/>
                <!--파일 선택-->
                <Border BorderBrush="#FF53609B" BorderThickness="0,1.5,1.5,1.5" Margin="5,0">
                    <Grid Height="25">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="70"/>
                            <ColumnDefinition Width="70"/>
                        </Grid.ColumnDefinitions>

                        <Grid>
                            <Rectangle Fill="#FF53609B"/>
                            <TextBlock Text="{x:Static glob:Resource.File}" Foreground="White" FontFamily="NanumGothic Light" FontSize="15" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>
                        <TextBlock Text="{Binding CalFilePath}" Grid.Column="1" Style="{StaticResource FileTextBaseStyle}"/>
                        <Button Content="{x:Static glob:Resource.Open}" Grid.Column="2" Style="{StaticResource FileBtn}" Tag="CAL" Margin="0,2" Command="{Binding FileOpenClick}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Tag}"/>
                        <Button Content="{x:Static glob:Resource.Save}" Grid.Column="3" Style="{StaticResource FileBtn}" Tag="CAL" Margin="2,2" Command="{Binding FileSaveClick}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Tag}"/>
                    </Grid>
                </Border>

                <!--설정값 및 포인트 컨트롤-->
                <Grid Margin="5,25,5,5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="280"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Orientation="Horizontal">
                        <TextBlock FontSize="16" Foreground="White" FontFamily="NanumGothic Light" VerticalAlignment="Center">
                            <Run Text="{x:Static glob:Resource.ErrRange}"/> : <Run Style="{StaticResource CalErrRateStyle}"/><Run Style="{StaticResource CalTypeText}"/>
                            / <Run Text="{x:Static glob:Resource.Delay}"/> : <Run Text="{Binding CalMeaInfo.CalDelayTime}" Style="{StaticResource RunBaseStyle}"/><Run Text="ms" Style="{StaticResource RunBaseStyle}"/>
                        </TextBlock>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Column="1">
                        <Button Tag="CAL" Style="{StaticResource ImgBtn}" Command="{Binding CalStartClick}">
                            <fa:ImageAwesome Icon="Play" ToolTip="{x:Static glob:Resource.CalStartTip}" Style="{StaticResource ColorChangeWhite}"/>
                        </Button>
                        <Button Tag="CAL" Style="{StaticResource ImgBtn}" Command="{Binding CalStopClick}">
                            <fa:ImageAwesome Icon="Stop" ToolTip="{x:Static glob:Resource.CalStopTip}" Style="{StaticResource ColorChangeWhite}"/>
                        </Button>

                        <Rectangle Fill="DodgerBlue" Width="3" RadiusY="1" RadiusX="1" Margin="0,0,5,0"/>

                        <Button Tag="CAL" Style="{StaticResource ImgBtn}"
                                Command="{Binding PointAddClick}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Tag}">
                            <fa:ImageAwesome Icon="Plus" ToolTip="{x:Static glob:Resource.PointAddTip}" Style="{StaticResource ColorChangeWhite}"/>
                        </Button>
                        <Button Tag="CAL" Style="{StaticResource ImgBtn}"
                                Command="{Binding PointDeleteClick}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Tag}">
                            <fa:ImageAwesome Icon="Minus" ToolTip="{x:Static glob:Resource.PointDelTip}" Style="{StaticResource ColorChangeWhite}"/>
                        </Button>

                        <Rectangle Fill="DodgerBlue" Width="3" RadiusY="1" RadiusX="1" Margin="0,0,5,0"/>

                        <Button Tag="CAL" Style="{StaticResource ImgBtn}"
                                Command="{Binding PointUpClick}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Tag}">
                            <fa:ImageAwesome Icon="ChevronUp" ToolTip="{x:Static glob:Resource.PointUpTip}" Style="{StaticResource ColorChangeWhite}" />
                        </Button>
                        <Button Tag="CAL" Style="{StaticResource ImgBtn}"
                                Command="{Binding PointDownClick}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Tag}">
                            <fa:ImageAwesome Icon="ChevronDown" ToolTip="{x:Static glob:Resource.PointDownTip}" Style="{StaticResource ColorChangeWhite}"/>
                        </Button>

                        <Rectangle Fill="DodgerBlue" Width="3" RadiusY="1" RadiusX="1" Margin="0,0,5,0"/>

                        <Button Style="{StaticResource ImgBtn}" Command="{Binding PointUploadClick}">
                            <fa:ImageAwesome Icon="Upload" ToolTip="{x:Static glob:Resource.PointUploadTip}" Style="{StaticResource ColorChangeWhite}" />
                        </Button>
                        <Button Style="{StaticResource ImgBtn}" Command="{Binding PointDownloadClick}">
                            <fa:ImageAwesome Icon="Download" ToolTip="{x:Static glob:Resource.PointDownloadTip}" Style="{StaticResource ColorChangeWhite}"/>
                        </Button>

                        <Rectangle Fill="DodgerBlue" Width="3" RadiusY="1" RadiusX="1" Margin="0,0,5,0"/>

                        <Button Tag="CAL" Style="{StaticResource ImgBtn}"
                                Command="{Binding ResultDataSaveClick}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Tag}">
                            <fa:ImageAwesome Icon="Save" ToolTip="{x:Static glob:Resource.DataSaveTip}" Style="{StaticResource ColorChangeWhite}"/>
                        </Button>
                    </StackPanel>
                </Grid>

                <!--포인트 그리드-->
                <DataGrid ItemsSource="{Binding CalPointTable}" SelectedIndex="{Binding CalGridSelectedIndex, Mode=TwoWay}" Style="{StaticResource DataGridBaseStyle}" ScrollViewer.VerticalScrollBarVisibility="Auto">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="NO"      Binding="{Binding NO}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="SetVolt" Binding="{Binding SetVolt, UpdateSourceTrigger=PropertyChanged}"/>
                        <DataGridTextColumn Header="SetCurr" Binding="{Binding SetCurr, UpdateSourceTrigger=PropertyChanged}"/>
                        <DataGridTextColumn Header="OutVolt" Binding="{Binding OutVolt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat='#,0.#'}"   IsReadOnly="True"/>
                        <DataGridTextColumn Header="OutCurr" Binding="{Binding OutCurr, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat='#,0.###'}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="OutDMM"  Binding="{Binding OutDMM,  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat='#,0.###'}" IsReadOnly="True">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsRangeIn}" Value="True">
                                            <Setter Property="TextBlock.Foreground" Value="Black"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsRangeIn}" Value="False">
                                            <Setter Property="TextBlock.Foreground" Value="Red"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="CellEditEnding">
                            <mvvm:EventToCommand Command="{Binding CalGridCellEdit}" PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </DataGrid>
            </StackPanel>

            <!--MEA 부분 Display-->
            <StackPanel Grid.Column="1">
                <TextBlock Text="MEA" Foreground="White" FontSize="35" HorizontalAlignment="Center" FontFamily="NanumGothic" FontWeight="Bold"/>
                <!--파일 선택-->
                <Border BorderBrush="#FF53609B" BorderThickness="0,1.5,1.5,1.5" Margin="5,0">
                    <Grid Height="25">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="70"/>
                            <ColumnDefinition Width="70"/>
                        </Grid.ColumnDefinitions>

                        <Grid>
                            <Rectangle Fill="#FF53609B"/>
                            <TextBlock Text="{x:Static glob:Resource.File}" Foreground="White" FontFamily="NanumGothic Light" FontSize="15" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>
                        <TextBlock Text="{Binding MeaFilePath}" Grid.Column="1" Style="{StaticResource FileTextBaseStyle}"/>
                        <Button Content="{x:Static glob:Resource.Open}" Grid.Column="2" Style="{StaticResource FileBtn}" Tag="MEA" Margin="0,2" Command="{Binding FileOpenClick}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Tag}"/>
                        <Button Content="{x:Static glob:Resource.Save}" Grid.Column="3" Style="{StaticResource FileBtn}" Tag="MEA" Margin="2,2" Command="{Binding FileSaveClick}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Tag}"/>
                    </Grid>
                </Border>

                <!--설정값 및 포인트 컨트롤-->
                <Grid Margin="5,25,5,5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="280"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Orientation="Horizontal">
                        <TextBlock FontSize="16" Foreground="White" FontFamily="NanumGothic Light" VerticalAlignment="Center">
                            <Run Text="{x:Static glob:Resource.ErrRange}"/> : <Run Style="{StaticResource MeaErrRateStyle}"/><Run Style="{StaticResource CalTypeText}"/>
                            / <Run Text="{x:Static glob:Resource.Delay}"/> : <Run Text="{Binding CalMeaInfo.MeaDelayTime}" Style="{StaticResource RunBaseStyle}"/><Run Text="ms" Style="{StaticResource RunBaseStyle}"/>
                        </TextBlock>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Column="1">
                        <Button Tag="MEA" Style="{StaticResource ImgBtn}" Command="{Binding MeaStartClick}">
                            <fa:ImageAwesome Icon="Play" ToolTip="{x:Static glob:Resource.MeaStartTip}" Style="{StaticResource ColorChangeWhite}"/>
                        </Button>
                        <Button Tag="MEA" Style="{StaticResource ImgBtn}" Command="{Binding MeaStopClick}">
                            <fa:ImageAwesome Icon="Stop" ToolTip="{x:Static glob:Resource.MeaStopTip}" Style="{StaticResource ColorChangeWhite}"/>
                        </Button>

                        <Rectangle Fill="DodgerBlue" Width="3" RadiusY="1" RadiusX="1" Margin="0,0,5,0"/>

                        <Button Tag="MEA" Style="{StaticResource ImgBtn}"
                                Command="{Binding PointAddClick}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Tag}">
                            <fa:ImageAwesome Icon="Plus" ToolTip="{x:Static glob:Resource.PointAddTip}" Style="{StaticResource ColorChangeWhite}"/>
                        </Button>
                        <Button Tag="MEA" Style="{StaticResource ImgBtn}"
                                Command="{Binding PointDeleteClick}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Tag}">
                            <fa:ImageAwesome Icon="Minus" ToolTip="{x:Static glob:Resource.PointDelTip}" Style="{StaticResource ColorChangeWhite}"/>
                        </Button>

                        <Rectangle Fill="DodgerBlue" Width="3" RadiusY="1" RadiusX="1" Margin="0,0,5,0"/>

                        <Button Tag="MEA" Style="{StaticResource ImgBtn}"
                                Command="{Binding PointUpClick}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Tag}">
                            <fa:ImageAwesome Icon="ChevronUp" ToolTip="{x:Static glob:Resource.PointUpTip}" Style="{StaticResource ColorChangeWhite}" />
                        </Button>
                        <Button Tag="MEA" Style="{StaticResource ImgBtn}"
                                Command="{Binding PointDownClick}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Tag}">
                            <fa:ImageAwesome Icon="ChevronDown" ToolTip="{x:Static glob:Resource.PointDownTip}" Style="{StaticResource ColorChangeWhite}"/>
                        </Button>

                        <Rectangle Fill="DodgerBlue" Width="3" RadiusY="1" RadiusX="1" Margin="0,0,5,0"/>

                        <Button Tag="MEA" Style="{StaticResource ImgBtn}"
                                Command="{Binding ResultDataSaveClick}"  CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Tag}">
                            <fa:ImageAwesome Icon="Save" ToolTip="{x:Static glob:Resource.DataSaveTip}" Style="{StaticResource ColorChangeWhite}"/>
                        </Button>
                    </StackPanel>
                </Grid>

                <!--포인트 그리드-->
                <DataGrid ItemsSource="{Binding MeaPointTable}" SelectedIndex="{Binding MeaGridSelectedIndex, Mode=TwoWay}" Style="{StaticResource DataGridBaseStyle}" ScrollViewer.VerticalScrollBarVisibility="Auto">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="NO"      Binding="{Binding NO}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="SetVolt" Binding="{Binding SetVolt, UpdateSourceTrigger=PropertyChanged}"/>
                        <DataGridTextColumn Header="SetCurr" Binding="{Binding SetCurr, UpdateSourceTrigger=PropertyChanged}"/>
                        <DataGridTextColumn Header="OutVolt" Binding="{Binding OutVolt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat='#,0.#'}"   IsReadOnly="True"/>
                        <DataGridTextColumn Header="OutCurr" Binding="{Binding OutCurr, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat='#,0.###'}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="OutDMM"  Binding="{Binding OutDMM,  Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat='#,0.###'}" IsReadOnly="True">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsRangeIn}" Value="True">
                                            <Setter Property="TextBlock.Foreground" Value="Black"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsRangeIn}" Value="False">
                                            <Setter Property="TextBlock.Foreground" Value="Red"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="CellEditEnding">
                            <mvvm:EventToCommand Command="{Binding MeaGridCellEdit}"  PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </DataGrid>
            </StackPanel>
        </Grid>

        <StackPanel Grid.Row="1" Orientation="Horizontal">
            <!--CAL Option-->
            <Border Width="165" BorderBrush="#FF3B456B" BorderThickness="1" Margin="5,5,0,5">
                <StackPanel>
                    <TextBlock Text="{x:Static glob:Resource.CtrlerBox}" Background="#FF3B456B" Padding="3" Foreground="White" FontFamily="NanumGothic" FontSize="20" FontWeight="Bold"/>

                    <StackPanel Margin="0,10,0,0">
                        <Grid Margin="0,0,0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <!--시작-->
                            <Button Grid.Column="0" Background="{x:Null}" BorderBrush="{x:Null}" Style="{StaticResource BtnBaseNormal}" Command="{Binding AutoCalStartClick}">
                                <StackPanel>
                                    <fa:ImageAwesome Foreground="DodgerBlue" Icon="Play" Height="30" Width="30" Margin="0,0,0,3" Style="{StaticResource ColorChangeBlue}"/>
                                    <TextBlock Text="{x:Static glob:Resource.Start}" FontSize="14" Foreground="White" HorizontalAlignment="Center" FontFamily="NanumGothic Light"/>
                                </StackPanel>
                            </Button>
                            <!--정지-->
                            <Button Grid.Column="1" Background="{x:Null}" BorderBrush="{x:Null}" Style="{StaticResource BtnBaseNormal}" Command="{Binding AutoCalStopClick}">
                                <StackPanel>
                                    <fa:ImageAwesome Foreground="DodgerBlue" Icon="Stop" Height="30" Width="30" Margin="0,0,0,3" Style="{StaticResource ColorChangeBlue}"/>
                                    <TextBlock Text="{x:Static glob:Resource.Stop}" FontSize="14" Foreground="White" HorizontalAlignment="Center" FontFamily="NanumGothic Light"/>
                                </StackPanel>
                            </Button>
                            <!--수동-->
                            <Button Grid.Column="3" Background="{x:Null}" BorderBrush="{x:Null}" Style="{StaticResource BtnBaseNormal}" Command="{Binding ManualCalClick}">
                                <StackPanel>
                                    <fa:ImageAwesome Foreground="DodgerBlue" Height="30" Width="30" Margin="0,0,0,3" Style="{StaticResource ColorChangeBlue}" Icon="Wrench"/>
                                    <TextBlock Text="{x:Static glob:Resource.Manual}" FontSize="14" Foreground="White" HorizontalAlignment="Center" FontFamily="NanumGothic Light"/>
                                </StackPanel>
                            </Button>
                        </Grid>

                        <TextBlock Text="{x:Static glob:Resource.CalType}" FontSize="14" Foreground="White" FontFamily="NanumGothic Light" HorizontalAlignment="Center"/>
                        <Grid Margin="5,5,5,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <RadioButton x:Name="VoltCalBtn" Content="{x:Static glob:Resource.Volt}" Style="{StaticResource RadioStyle}" Grid.Column="0" Command="{Binding ModeSelectClick}" IsChecked="{Binding CalMode}"/>
                            <RadioButton x:Name="CurrCalBtn" Content="{x:Static glob:Resource.Curr}" Style="{StaticResource RadioStyle}" Grid.Column="1" Command="{Binding ModeSelectClick}" IsChecked="{Binding CalMode, Converter={StaticResource InvertBoolConv}}"/>
                        </Grid>

                        <TextBlock Text="{x:Static glob:Resource.SelectCh}" FontSize="14" Foreground="White" FontFamily="NanumGothic Light" HorizontalAlignment="Center"/>
                        <Grid Margin="5,5,5,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <RadioButton Content="CH1" Style="{StaticResource RadioStyle}" Grid.Column="0" Tag="1" IsChecked="True"
                                         Command="{Binding ChSelectClick}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Tag}"/>
                            <RadioButton Content="CH2" Style="{StaticResource RadioStyle}" Grid.Column="1" Tag="2"
                                         Command="{Binding ChSelectClick}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Tag}"/>
                            <RadioButton Content="ALL" Style="{StaticResource RadioStyle}" Grid.Column="2" Tag="0"
                                         Command="{Binding ChSelectClick}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Tag}"/>
                        </Grid>
                    </StackPanel>
                </StackPanel>
            </Border>

            <!--Monitoing Box-->
            <Border BorderBrush="#FF3B456B" BorderThickness="1" Margin="5,5,0,5">
                <StackPanel>
                    <TextBlock Text="{x:Static glob:Resource.MonitoringBox}" Background="#FF3B456B" Padding="3" Foreground="White" FontFamily="NanumGothic" FontSize="20" FontWeight="Bold"/>

                    <StackPanel Orientation="Horizontal">
                        <StackPanel Margin="10">
                            <!-- 채널1 Volt -->
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                <TextBlock Style="{StaticResource MonitoringItemText}">
                                    CH1 <Run Text="{x:Static glob:Resource.Volt}"/>(mV)
                                </TextBlock>
                                <Rectangle Height="25" Width="3" Fill="DodgerBlue" RadiusY="1.5" RadiusX="1.5" Margin="5,0"/>
                                <Grid Width="190">
                                    <TextBlock Text="8888888.8" Foreground="#FF2A2D46" Style="{StaticResource MonitoringText}"/>
                                    <TextBlock Text="{Binding Mcu.Ch1Volt, StringFormat=#0.0}" Foreground="White" Style="{StaticResource MonitoringText}"/>
                                </Grid>
                            </StackPanel>
                            <!-- 채널1 Curr -->
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                <TextBlock Style="{StaticResource MonitoringItemText}">
                                    CH1 <Run Text="{x:Static glob:Resource.Curr}"/>(mV)
                                </TextBlock>
                                <Rectangle Height="25" Width="3" Fill="DodgerBlue" RadiusY="1.5" RadiusX="1.5" Margin="5,0"/>
                                <Grid Width="190">
                                    <TextBlock Text="8888888.8" Foreground="#FF2A2D46" Style="{StaticResource MonitoringText}"/>
                                    <TextBlock Text="{Binding Mcu.Ch1Curr, StringFormat=#0.0}" Foreground="White" Style="{StaticResource MonitoringText}"/>
                                </Grid>
                            </StackPanel>
                            <!-- Dmm1 Volt -->
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                <TextBlock Style="{StaticResource MonitoringItemText}">
                                    DMM(<Run Style="{StaticResource CalTypeText}" FontWeight="Normal"/>)
                                </TextBlock>
                                <Rectangle Height="25" Width="3" Fill="DodgerBlue" RadiusY="1.5" RadiusX="1.5" Margin="5,0"/>
                                <Grid Width="190">
                                    <TextBlock Text="8888888.8" Foreground="#FF2A2D46" Style="{StaticResource MonitoringText}"/>
                                    <TextBlock Foreground="White" Style="{StaticResource DmmTextSwitch}"/>
                                </Grid>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Margin="10">
                            <!-- 채널2 Volt -->
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                <TextBlock Style="{StaticResource MonitoringItemText}">
                                    CH2 <Run Text="{x:Static glob:Resource.Volt}"/>(mV)
                                </TextBlock>
                                <Rectangle Height="25" Width="3" Fill="DodgerBlue" RadiusY="1.5" RadiusX="1.5" Margin="5,0"/>
                                <Grid Width="190">
                                    <TextBlock Text="8888888.8" Foreground="#FF2A2D46" Style="{StaticResource MonitoringText}"/>
                                    <TextBlock Text="{Binding Mcu.Ch2Volt, StringFormat=#0.0}" Foreground="White" Style="{StaticResource MonitoringText}"/>
                                </Grid>
                            </StackPanel>
                            <!-- 채널2 Curr -->
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                <TextBlock Style="{StaticResource MonitoringItemText}">
                                    CH2 <Run Text="{x:Static glob:Resource.Curr}"/>(mV)
                                </TextBlock>
                                <Rectangle Height="25" Width="3" Fill="DodgerBlue" RadiusY="1.5" RadiusX="1.5" Margin="5,0"/>
                                <Grid Width="190">
                                    <TextBlock Text="8888888.8" Foreground="#FF2A2D46" Style="{StaticResource MonitoringText}"/>
                                    <TextBlock Text="{Binding Mcu.Ch2Curr, StringFormat=#0.0}" Foreground="White" Style="{StaticResource MonitoringText}"/>
                                </Grid>
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
            </Border>

            <!--AutoSave Box-->
            <Border BorderBrush="#FF3B456B" BorderThickness="1" Margin="5,5,0,5" Style="{StaticResource Hidden}">
                <StackPanel>
                    <TextBlock Text="{x:Static glob:Resource.AutoSaveBox}" Background="#FF3B456B" Padding="3" Foreground="White" FontFamily="NanumGothic" FontSize="20" FontWeight="Bold"/>

                    <TextBlock Text="CAL" Foreground="White" Margin="0,10,0,5" FontSize="16" FontFamily="NanumGothic" FontWeight="Bold" HorizontalAlignment="Center"/>
                    <Grid Margin="5,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Grid.Resources>
                            <Style TargetType="Border">
                                <Setter Property="Height" Value="25"/>
                                <Setter Property="Width" Value="70"/>
                                <Setter Property="Margin" Value="2"/>
                                <Setter Property="CornerRadius" Value="10"/>
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="True">
                                        <Setter Property="Background" Value="{StaticResource LedGreen}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="{StaticResource LedRed}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="FontSize" Value="16"/>
                                <Setter Property="FontFamily" Value="NanumGothic Light"/>
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                            </Style>
                        </Grid.Resources>

                        <Border Grid.Row="0" Grid.Column="0" IsEnabled="{Binding SaveCheck.CalCh1VoltFlag}">
                            <TextBlock Text="CH1 V"/>
                        </Border>
                        <Border Grid.Row="0" Grid.Column="1" IsEnabled="{Binding SaveCheck.CalCh1CurrFlag}">
                            <TextBlock Text="CH1 I"/>
                        </Border>
                        <Border Grid.Row="1" Grid.Column="0" IsEnabled="{Binding SaveCheck.CalCh2VoltFlag}">
                            <TextBlock Text="CH2 V"/>
                        </Border>
                        <Border Grid.Row="1" Grid.Column="1" IsEnabled="{Binding SaveCheck.CalCh2CurrFlag}">
                            <TextBlock Text="CH2 I"/>
                        </Border>
                    </Grid>

                    <TextBlock Text="MEA" Foreground="White" Margin="0,10,0,5" FontSize="16" FontFamily="NanumGothic" FontWeight="Bold" HorizontalAlignment="Center"/>
                    <Grid Margin="5,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Grid.Resources>
                            <Style TargetType="Border">
                                <Setter Property="Height" Value="25"/>
                                <Setter Property="Width" Value="70"/>
                                <Setter Property="Margin" Value="2"/>
                                <Setter Property="CornerRadius" Value="10"/>
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="True">
                                        <Setter Property="Background" Value="{StaticResource LedGreen}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Background" Value="{StaticResource LedRed}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="FontSize" Value="16"/>
                                <Setter Property="FontFamily" Value="NanumGothic Light"/>
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                            </Style>
                        </Grid.Resources>

                        <Border Grid.Row="0" Grid.Column="0" IsEnabled="{Binding SaveCheck.MeaCh1VoltFlag}">
                            <TextBlock Text="CH1 V"/>
                        </Border>
                        <Border Grid.Row="0" Grid.Column="1" IsEnabled="{Binding SaveCheck.MeaCh1CurrFlag}">
                            <TextBlock Text="CH1 I"/>
                        </Border>
                        <Border Grid.Row="1" Grid.Column="0" IsEnabled="{Binding SaveCheck.MeaCh2VoltFlag}">
                            <TextBlock Text="CH2 V"/>
                        </Border>
                        <Border Grid.Row="1" Grid.Column="1" IsEnabled="{Binding SaveCheck.MeaCh2CurrFlag}">
                            <TextBlock Text="CH2 I"/>
                        </Border>
                    </Grid>
                </StackPanel>
            </Border>
        </StackPanel>

        <!--테스트 결과-->
        <Border x:Name="LogBorder" Grid.Row="2" BorderBrush="#FF3B456B" BorderThickness="1" Margin="5,0,5,5" LayoutUpdated="Border_LayoutUpdated">
            <StackPanel>
                <StackPanel Orientation="Horizontal" Background="#FF3B456B">
                    <TextBlock Text="{x:Static glob:Resource.LogBox}" Padding="3" Foreground="White" FontFamily="NanumGothic" FontSize="20" FontWeight="Bold"/>
                    <CheckBox Content="{x:Static glob:Resource.LogView}" Margin="20,0,0,0" Foreground="White" VerticalAlignment="Center" IsChecked="{Binding IsLogActive, Mode=OneWayToSource}"/>
                    <CheckBox Content="{x:Static glob:Resource.MonitorExcept}" Margin="20,0,0,0" Foreground="White" VerticalAlignment="Center" IsChecked="{Binding IsMoniExcept, Mode=OneWayToSource}"/>
                    <Button Content="Clear" Margin="20,0,0,0" Foreground="White" Width="50" Height="20" BorderBrush="DodgerBlue" Style="{StaticResource BtnNormalStyle}" Command="{Binding LogClearClick}"/>
                </StackPanel>

                <ScrollViewer x:Name="LogScroll" VerticalScrollBarVisibility="Auto">
                    <TextBlock Text="{Binding LogText}" Foreground="White" FontFamily="NanumBarunGothic" FontSize="16"/>
                </ScrollViewer>
            </StackPanel>
        </Border>
    </Grid>
</Page>
